#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
biplot.data.pca <- biplot(data.pca)
biplot.data.pca
library(ggbiplot)
ggbiplot(data.pca)
biplot.data.pca <- biplot(data.pca)
ggbiplot(data.pca)
#label each point with year
ggbiplot(data.pca, label = datatable$Year)
#label each point with year
ggbiplot(data.pca, label = datatable$Year)
datatable
data.pca.plot <- autoplot(data.pca,
data = datatable,
colour = 'catsize')
data.pca.plot
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pca,
data = datatable,
colour = 'Year')
#label with group size category
data.pca.size <- autoplot(data.pca,
data = datatable,
colour = 'catsize')
#label with group present or absent category
data.pca.presence <- autoplot(data.pca,
data = datatable,
colour = 'Presence')
#label with group Substrate
data.pca.substrate <- autoplot(data.pca,
data = datatable,
colour = 'Substrate')
#see the plots
data.pca.year
data.pca.size
data.pca.presence
data.pca.substrate
# if not already, install
install.packages("ggfortify")
install.packages("ggfortify")
install.packages("devtools")
install.packages("remotes")
install.packages("rgl")
install.packages("pca3d")
library(pca3d)
#
pca3d(data.pca)
# create a 3d interactiable plot
pca3d(data.pca)
pca3d
#create group of year
pca3d(data.pca, components = 1:3, group=datatable$Year)
#create group of substrate - or other group cat. variable
pca3d(data.pca, components = 1:3, group=datatable$Substrate)
#visualize with interactive plot
snapshotPCA3d(file="first3pc_substrate.png")
#create figure for saving
pca2d(colony_pca, group=, legend="topright")
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data.pca <- biplot(data.pca)
ggbiplot(data.pca)
# create a 3d interactiable plot
pca3d(data.pca)
install.packages("ggfortify")
install.packages("ggfortify")
library(devtools)
# read in data
library(readxl)
Cartmell_NLCD_Rlesson <- read_excel("Cartmell_NLCD_Rlesson.xlsx")
# rename something easy to type and applicable
datatable <- Cartmell_NLCD_Rlesson
#check for any issues
summary(datatable)
# substrate has 4 categories - refers to structure the nest is built on
substrates <- c("1", "2", "3", "4")
datatable$Substrate <- as.factor(datatable$Substrate)
#year has 7 categories
years <- c("2001", "2004", "2006", "2008", "2013", "2016", "2019")
datatable$Year <- as.factor(datatable$Year)
#not quite a categorical var, but will still treat as factor
colonysites <- unique(datatable$COLONYNAME)
datatable$COLONYNAME = factor(datatable$COLONYNAME,
levels = unique(datatable$COLONYNAME))
#check factor(datatable$var) worked
summary(datatable)
#Check for NaN or Inf and replace with NA if present
#is all a variable NA
all(is.na(datatable$Size))
#Replace NaN & Inf with NA
datatable[is.na(datatable) | datatable=="-Inf"] = NA
#check for replacement
summary(datatable)
# Check correlation if you're feeling adventurous
round(cor(iris[,1:4]), 2) #iris data
round(cor(datatable[,5:11]), 2) #nlcd data
#remember our og
summary(datatable)
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE) #5-11 columns
summary(data.pca)
#look at PCA object
str(data.pca)
#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data.pca <- biplot(data.pca)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
#remember our og
summary(datatable)
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE) #5-11 columns
summary(data.pca)
#look at PCA object
str(data.pca)
#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data.pca <- biplot(data.pca)
ggbiplot(data.pca)
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pca,
data = datatable,
colour = 'Year')
#label with group size category
data.pca.size <- autoplot(data.pca,
data = datatable,
colour = 'catsize')
#label with group present or absent category
data.pca.presence <- autoplot(data.pca,
data = datatable,
colour = 'Presence')
install.packages("ggbiolot")
install.packages("remotes")
install.packages("remotes")
#plotting pca
# loading library
library(ggfortify)
#remember our og
summary(datatable)
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE) #5-11 columns
summary(data.pca)
#look at PCA object
str(data.pca)
#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data.pca <- biplot(data.pca)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
install.packages("ggfortify")
install.packages("devtools")
install.packages("remotes")
install.packages("rgl")
install.packages("pca3d")
install.packages("devtools")
library(devtools)
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
install.packages("remotes")
install.packages("ggbiolot")
install.packages("remotes")
install.packages("ggbiolot")
# read in data
library(readxl)
Cartmell_NLCD_Rlesson <- read_excel("Cartmell_NLCD_Rlesson.xlsx")
# rename something easy to type and applicable
datatable <- Cartmell_NLCD_Rlesson
#check for any issues
summary(datatable)
# substrate has 4 categories - refers to structure the nest is built on
substrates <- c("1", "2", "3", "4")
datatable$Substrate <- as.factor(datatable$Substrate)
#year has 7 categories
years <- c("2001", "2004", "2006", "2008", "2013", "2016", "2019")
datatable$Year <- as.factor(datatable$Year)
#not quite a categorical var, but will still treat as factor
colonysites <- unique(datatable$COLONYNAME)
datatable$COLONYNAME = factor(datatable$COLONYNAME,
levels = unique(datatable$COLONYNAME))
#check factor(datatable$var) worked
summary(datatable)
#Check for NaN or Inf and replace with NA if present
#is all a variable NA
all(is.na(datatable$Size))
#Replace NaN & Inf with NA
datatable[is.na(datatable) | datatable=="-Inf"] = NA
#check for replacement
summary(datatable)
# Check correlation if you're feeling adventurous
round(cor(iris[,1:4]), 2) #iris data
round(cor(datatable[,5:11]), 2) #nlcd data
#remember our og
summary(datatable)
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE) #5-11 columns
summary(data.pca)
#look at PCA object
str(data.pca)
#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data.pca <- biplot(data.pca)
biplot.data.pca <- biplot(data.pca)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE) #5-11 columns
summary(data.pca)
#look at PCA object
str(data.pca)
#loadings
data.pca
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data.pca <- biplot(data.pca)
ggbiplot(data.pca)
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pca,
data = datatable,
colour = 'Year')
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], cor=TRUE, center = TRUE, scale. = TRUE) #5-11 columns
data.pcaprincomp <- princomp(datatable[,c(5:11)], cor=TRUE, scores = TRUE)/
summary(data.pca)
data.pcaprincomp <- princomp(datatable[,c(5:11)], cor=TRUE, scores = TRUE)
summary(data.pcaprincomp)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data <- biplot(data.pcaprincomp)
ggbiplot(data.pca)
data.pca
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE, scores=TRUE) #5-11 columns
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE) #5-11 columns
#pcomp
ggbiplot(data.pca)
# biplots! two different views
#princomp
biplot.data <- biplot(data.pca)
#princomp
ggbiplot(data.pcaprincomp)
# biplots! two different views
#pCA
biplot.data <- biplot(data.pca)
biplot.data
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE, cor = TRUE, scores = TRUE) #5-11 columns
summary(data.pca)
str(data.pca)
#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
#plots PC1,PC2 automatically
iris_pca_plot <- autoplot(Iris_pca,
data = iris,
#  colour = 'Species'
)
#plots PC1,PC2 automatically
pca_plot <- autoplot(data_pca,
data = data.pca,
#  colour = 'Species'
)
#plots PC1,PC2 automatically
pca_plot <- autoplot(data_pca,
data = datatable,
#  colour = 'Species'
)
#plots PC1,PC2 automatically
pca_plot <- autoplot(data.pca,
data = datatable,
#  colour = 'Species'
)
pca_plot
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
# biplots! two different views
#pCA
biplot.data <- biplot(data.pca)
# biplots! two different views
#pCA
biplot.data <- biplot(data.pcaprincomp)
#princomp
ggbiplot(data.pca)
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pca,
data = datatable,
colour = 'Year')
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE, cor = TRUE, scores = TRUE) #5-11 columns
str(data.pca)
summary(data.pca)
#plotting pca
# loading library
library(ggfortify)
#plots PC1,PC2 automatically
pca_plot <- autoplot(data.pca,
data = datatable,
#  colour = 'Species'
)
pca_plot
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
# biplot
#pCA
biplot.data <- biplot(data.pcaprincomp)
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pca,
data = datatable,
colour = 'Year')
rlang::last_error()
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pca,
data = datatable,
colour = 'Year')
install.packages("ggfortify")
install.packages("ggfortify")
install.packages("devtools")
install.packages("devtools")
install.packages("remotes")
install.packages("remotes")
install.packages("rgl")
install.packages("pca3d")
install.packages("devtools")
install.packages("devtools")
library(devtools)
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
install.packages("remotes")
install.packages("remotes")
install.packages("ggbiolot")
# read in data
library(readxl)
Cartmell_NLCD_Rlesson <- read_excel("Cartmell_NLCD_Rlesson.xlsx")
View(Cartmell_NLCD_Rlesson)
# rename something easy to type and applicable
datatable <- Cartmell_NLCD_Rlesson
#check for any issues
summary(datatable)
# substrate has 4 categories - refers to structure the nest is built on
substrates <- c("1", "2", "3", "4")
datatable$Substrate <- as.factor(datatable$Substrate)
#year has 7 categories
years <- c("2001", "2004", "2006", "2008", "2013", "2016", "2019")
datatable$Year <- as.factor(datatable$Year)
#not quite a categorical var, but will still treat as factor
colonysites <- unique(datatable$COLONYNAME)
datatable$COLONYNAME = factor(datatable$COLONYNAME,
levels = unique(datatable$COLONYNAME))
#check factor(datatable$var) worked
summary(datatable)
#Check for NaN or Inf and replace with NA if present
#is all a variable NA
all(is.na(datatable$Size))
#Replace NaN & Inf with NA
datatable[is.na(datatable) | datatable=="-Inf"] = NA
#check for replacement
summary(datatable)
# Check correlation if you're feeling adventurous
round(cor(iris[,1:4]), 2) #iris data
round(cor(datatable[,5:11]), 2) #nlcd data
#remember our og
summary(datatable)
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE) #5-11 columns
summary(data.pca)
#look at PCA object
str(data.pca)
#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
biplot.data.pca <- biplot(data.pca)
ggbiplot(data.pca)
# run a pca
data.pca <- prcomp(datatable[,c(5:11)], center = TRUE, scale. = TRUE, cor = TRUE, scores = TRUE) #5-11 columns
data.pcaprincomp <- princomp(datatable[,c(5:11)], cor=TRUE, scores = TRUE)
summary(data.pca)
str(data.pca)
summary(data.pcaprincomp)
summary(data.pca)
summary(data.pcaprincomp)
#look at PCA object
str(data.pca)
#loadings
data.pca
#plotting pca
# loading library
library(ggfortify)
#plots PC1,PC2 automatically
pca_plot <- autoplot(data.pca,
data = datatable,
#  colour = 'Species'
)
pca_plot
# screeplot - how many components to keep
data.pca <- plot(data.pca, type="lines")
# biplot
#pCA
biplot.data <- biplot(data.pcaprincomp)
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pca,
data = datatable,
colour = 'Year')
#label with group size category
data.pca.size <- autoplot(data.pca,
data = datatable,
colour = 'catsize')
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#label with group year
data.pca.year <- autoplot(data.pcaprincomp,
data = datatable,
colour = 'Year')
##
# Add color! --> make at least one of these plots, substrate shows clearest grouping
#need to use princomp pca
#label with group year
data.pca.year <- autoplot(data.pcaprincomp,
data = datatable,
colour = 'Year')
#label with group size category
data.pca.size <- autoplot(data.pcaprincomp,
data = datatable,
colour = 'catsize')
#label with group present or absent category
data.pca.presence <- autoplot(data.pcaprincomp,
data = datatable,
colour = 'Presence')
#label with group Substrate
data.pca.substrate <- autoplot(data.pca,
data = datatable,
colour = 'Substrate')
#see the plots
data.pca.year
data.pca.size
data.pca.presence
data.pca.substrate
#label with group Substrate
data.pca.substrate <- autoplot(data.pcaprincomp,
data = datatable,
colour = 'Substrate')
data.pca.substrate
install.packages("rgl")
install.packages("pca3d")
library(pca3d)
# create a 3d interactiable plot
pca3d(data.pca)
# create a 3d interactiable plot
pca3d(data.pcaprincomp)
#create group of substrate - or other group cat. variable
pca3d(data.pcaprincomp, components = 1:3, group=datatable$Substrate)
#visualize with interactive plot
snapshotPCA3d(file="first3pc_substrate.png")
#create group of substrate - or other group cat. variable
pca3d(data.pcaprincomp, components = 1:3, group=datatable$Year)
#visualize with interactive plot
snapshotPCA3d(file="first3pc_year.png")
#create group of substrate - or other group cat. variable
pca3d(data.pcaprincomp, components = 1:3, group=datatable$catsize)
#visualize with interactive plot
snapshotPCA3d(file="first3pc_size.png")
#create group of substrate - or other group cat. variable
pca3d(data.pcaprincomp, components = 1:3, group=datatable$Presence)
#visualize with interactive plot
snapshotPCA3d(file="first3pc_presence.png")
